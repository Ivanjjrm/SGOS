unit Ureceber;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, Vcl.Buttons, Vcl.Grids,
  Vcl.DBGrids, Vcl.ExtCtrls, Uprincipal, Data.DB, IBX.IBCustomDataSet,
  IBX.IBQuery, Upagamento, Vcl.ComCtrls, UBuscaPessoa, ppVar, ppCtrls, ppBands,
  ppDB, ppPrnabl, ppClass, ppCache, ppDesignLayer, ppParameter, ppProd,
  ppReport, ppComm, ppRelatv, ppDBPipe;

type
  TReceber = class(TForm)
    DBGrid1: TDBGrid;
    Ebusca: TEdit;
    Label3: TLabel;
    Panel1: TPanel;
    BitBtn2: TBitBtn;
    BitBtn3: TBitBtn;
    BitBtn4: TBitBtn;
    BitBtn6: TBitBtn;
    BitBtn8: TBitBtn;
    EsubTotal: TEdit;
    Ejuros: TEdit;
    Label4: TLabel;
    Label5: TLabel;
    Edesc: TEdit;
    Label6: TLabel;
    Etotal: TEdit;
    Label7: TLabel;
    IBQueryCli: TIBQuery;
    DataSourcecli: TDataSource;
    Edias: TEdit;
    Label1: TLabel;
    IBQueryCan: TIBQuery;
    BitBtn1: TBitBtn;
    RadioGroup1: TRadioGroup;
    RadioGroup2: TRadioGroup;
    DateTimePicker1: TDateTimePicker;
    DateTimePicker2: TDateTimePicker;
    Label2: TLabel;
    Label8: TLabel;
    BitBtn7: TBitBtn;
    Eid: TEdit;
    DBPipelinelista: TppDBPipeline;
    ppReportlista1: TppReport;
    ppParameterList1: TppParameterList;
    ppDesignLayers1: TppDesignLayers;
    ppDesignLayer1: TppDesignLayer;
    ppHeaderBand1: TppHeaderBand;
    ppDetailBand1: TppDetailBand;
    ppShape1: TppShape;
    ppDBText1: TppDBText;
    ppDBText2: TppDBText;
    ppDBText3: TppDBText;
    ppLabel1: TppLabel;
    ppLabel2: TppLabel;
    ppLabel3: TppLabel;
    ppLabel4: TppLabel;
    ppLabel5: TppLabel;
    ppLabel6: TppLabel;
    ppLabel7: TppLabel;
    ppLabel8: TppLabel;
    ppLabelDesc: TppLabel;
    ppLine1: TppLine;
    ppLabel9: TppLabel;
    ppLabel10: TppLabel;
    ppLabel11: TppLabel;
    ppDBText4: TppDBText;
    ppDBText5: TppDBText;
    ppDBText6: TppDBText;
    ppDBText7: TppDBText;
    ppDBText8: TppDBText;
    ppDBText9: TppDBText;
    ppDBText10: TppDBText;
    IBQueryCliID_CONT_REC: TIntegerField;
    IBQueryCliDATA_LANC: TDateField;
    IBQueryCliDATA_ABERT: TDateField;
    IBQueryCliDATA_VENC: TDateField;
    IBQueryCliDATA_PAG: TDateField;
    IBQueryCliVALOR_JUROS: TIBBCDField;
    IBQueryCliVALOR_TOTAL: TIBBCDField;
    IBQueryCliVALOR_PAGO: TIBBCDField;
    IBQueryCliREF: TIBStringField;
    IBQueryCliSTATUS: TIBStringField;
    IBQueryCliID_CAD_FK: TIntegerField;
    IBQueryCliID_OS_FK: TIntegerField;
    IBQueryCliNOME: TIBStringField;
    IBQueryCliTEL: TIBStringField;
    IBQueryCliCPF_CNPJ: TIBStringField;
    IBQueryCliENDERECO: TIBStringField;
    IBQueryCliTIPO_CAD: TIBStringField;
    ppDBText11: TppDBText;
    ppDBText12: TppDBText;
    ppSummaryBand1: TppSummaryBand;
    ppLine2: TppLine;
    ppShape2: TppShape;
    ppDBCalc1: TppDBCalc;
    ppDBCalc2: TppDBCalc;
    ppDBCalc3: TppDBCalc;
    ppLabel12: TppLabel;
    ppLabel13: TppLabel;
    ppLine3: TppLine;
    ppLine4: TppLine;
    ppLabel14: TppLabel;
    ppSystemVariable1: TppSystemVariable;
    ppLine5: TppLine;
    ppReportlista2: TppReport;
    ppParameterList2: TppParameterList;
    ppDesignLayers2: TppDesignLayers;
    ppDesignLayer2: TppDesignLayer;
    ppHeaderBand2: TppHeaderBand;
    ppDetailBand2: TppDetailBand;
    ppShape3: TppShape;
    ppDBText13: TppDBText;
    ppDBText14: TppDBText;
    ppDBText15: TppDBText;
    ppLabel15: TppLabel;
    ppLabel16: TppLabel;
    ppLabel17: TppLabel;
    ppLabel18: TppLabel;
    ppLabel19: TppLabel;
    ppLabel20: TppLabel;
    ppLabel22: TppLabel;
    ppLabel23: TppLabel;
    ppLabel26: TppLabel;
    ppLine6: TppLine;
    ppSummaryBand2: TppSummaryBand;
    ppDBText16: TppDBText;
    ppDBText17: TppDBText;
    ppDBText18: TppDBText;
    ppDBText19: TppDBText;
    ppDBText20: TppDBText;
    ppDBText21: TppDBText;
    ppLine7: TppLine;
    ppShape4: TppShape;
    ppDBCalc4: TppDBCalc;
    ppLabel21: TppLabel;
    ppSystemVariable2: TppSystemVariable;
    procedure BitBtn2Click(Sender: TObject);
    procedure BitBtn4Click(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure DBGrid1DrawColumnCell(Sender: TObject; const Rect: TRect;
      DataCol: Integer; Column: TColumn; State: TGridDrawState);
    procedure BitBtn8Click(Sender: TObject);
    procedure EdescKeyPress(Sender: TObject; var Key: Char);
    procedure EdescExit(Sender: TObject);
    procedure EjurosKeyPress(Sender: TObject; var Key: Char);
    procedure EjurosExit(Sender: TObject);
    procedure DBGrid1CellClick(Column: TColumn);
    procedure BitBtn3Click(Sender: TObject);
    procedure EbuscaKeyPress(Sender: TObject; var Key: Char);
    procedure BitBtn7Click(Sender: TObject);
    procedure BitBtn1Click(Sender: TObject);
    procedure RadioGroup1Click(Sender: TObject);
    procedure BitBtn6Click(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Receber: TReceber;
implementation

{$R *.dfm}

uses UnovaReceber;

// função que vai calcular os juros

procedure TReceber.BitBtn1Click(Sender: TObject);
begin
if (RadioGroup1.ItemIndex = 0 ) then
  Begin
    if (RadioGroup2.ItemIndex = 0) then
      begin
        if (Eid.Text = '') then
          begin
            IBQueryCli.active := false;
            IBQueryCli.sql.clear;
            IBQueryCli.sql.add('SELECT R.ID_CONT_REC,R.DATA_LANC,R.DATA_ABERT,R.DATA_VENC,R.DATA_PAG,'+
            'R.VALOR_JUROS,R.VALOR_TOTAL,R.VALOR_PAGO,R.REF,R.STATUS,R.ID_CAD_FK,R.ID_OS_FK, '+
            'C.NOME,C.TEL,C.CPF_CNPJ,C.ENDERECO,C.TIPO_CAD FROM CONTA_REC AS R INNER JOIN PESSOA AS C '+
            'ON C.ID_CAD = ID_CAD_FK WHERE (R.DATA_ABERT BETWEEN :dtincio AND :dtfim) AND R.STATUS =:status;');
            IBQueryCli.ParamByName('dtincio').AsDate := DateTimePicker1.Date;
            IBQueryCli.ParamByName('dtfim').AsDate := DateTimePicker2.Date;
            IBQueryCli.ParamByName('status').AsString := 'ATIVA';
            IBQueryCli.active:= true;
          end
       else if (Eid.Text <> '') then
          begin
            IBQueryCli.active := false;
            IBQueryCli.sql.clear;
            IBQueryCli.sql.add('SELECT R.ID_CONT_REC,R.DATA_LANC,R.DATA_ABERT,R.DATA_VENC,R.DATA_PAG,'+
            'R.VALOR_JUROS,R.VALOR_TOTAL,R.VALOR_PAGO,R.REF,R.STATUS,R.ID_CAD_FK,R.ID_OS_FK, '+
            'C.NOME,C.TEL,C.CPF_CNPJ,C.ENDERECO,C.TIPO_CAD FROM CONTA_REC AS R INNER JOIN PESSOA AS C '+
            'ON C.ID_CAD = ID_CAD_FK WHERE (R.DATA_ABERT BETWEEN :dtincio AND :dtfim) AND R.STATUS =:status AND R.ID_CAD_FK =:idcad');
            IBQueryCli.ParamByName('dtincio').AsDate := DateTimePicker1.Date;
            IBQueryCli.ParamByName('dtfim').AsDate := DateTimePicker2.Date;
            IBQueryCli.ParamByName('status').AsString := 'ATIVA';
            IBQueryCli.ParamByName('idcad').Asinteger:= Strtoint(Eid.Text);
            IBQueryCli.active:= true;
          end;
      end
   else if (RadioGroup2.ItemIndex = 1) then
    begin
    if (Eid.Text = '') then
          begin
            IBQueryCli.active := false;
            IBQueryCli.sql.clear;
            IBQueryCli.sql.add('SELECT R.ID_CONT_REC,R.DATA_LANC,R.DATA_ABERT,R.DATA_VENC,R.DATA_PAG,'+
            'R.VALOR_JUROS,R.VALOR_TOTAL,R.VALOR_PAGO,R.REF,R.STATUS,R.ID_CAD_FK,R.ID_OS_FK, '+
            'C.NOME,C.TEL,C.CPF_CNPJ,C.ENDERECO,C.TIPO_CAD FROM CONTA_REC AS R INNER JOIN PESSOA AS C '+
            'ON C.ID_CAD = ID_CAD_FK WHERE (R.DATA_VENC BETWEEN :dtincio AND :dtfim) AND R.STATUS =:status;');
            IBQueryCli.ParamByName('dtincio').AsDate := DateTimePicker1.Date;
            IBQueryCli.ParamByName('dtfim').AsDate := DateTimePicker2.Date;
            IBQueryCli.ParamByName('status').AsString := 'ATIVA';
            IBQueryCli.active:= true;
          end
       else if (Eid.Text <> '') then
          begin
            IBQueryCli.active := false;
            IBQueryCli.sql.clear;
            IBQueryCli.sql.add('SELECT R.ID_CONT_REC,R.DATA_LANC,R.DATA_ABERT,R.DATA_VENC,R.DATA_PAG,'+
            'R.VALOR_JUROS,R.VALOR_TOTAL,R.VALOR_PAGO,R.REF,R.STATUS,R.ID_CAD_FK,R.ID_OS_FK, '+
            'C.NOME,C.TEL,C.CPF_CNPJ,C.ENDERECO,C.TIPO_CAD FROM CONTA_REC AS R INNER JOIN PESSOA AS C '+
            'ON C.ID_CAD = ID_CAD_FK WHERE (R.DATA_VENC BETWEEN :dtincio AND :dtfim) AND R.STATUS =:status AND R.ID_CAD_FK =:idcad');
            IBQueryCli.ParamByName('dtincio').AsDate := DateTimePicker1.Date;
            IBQueryCli.ParamByName('dtfim').AsDate := DateTimePicker2.Date;
            IBQueryCli.ParamByName('status').AsString := 'ATIVA';
            IBQueryCli.ParamByName('idcad').Asinteger:= Strtoint(Eid.Text);
            IBQueryCli.active:= true;
          end;
    end;
  end;
 if (RadioGroup1.ItemIndex = 1) then
  begin
    if (RadioGroup2.ItemIndex = 0) then
      begin
        if (Eid.Text = '') then
          begin
            IBQueryCli.active := false;
            IBQueryCli.sql.clear;
            IBQueryCli.sql.add('SELECT R.ID_CONT_REC,R.DATA_LANC,R.DATA_ABERT,R.DATA_VENC,R.DATA_PAG,'+
            'R.VALOR_JUROS,R.VALOR_TOTAL,R.VALOR_PAGO,R.REF,R.STATUS,R.ID_CAD_FK,R.ID_OS_FK, '+
            'C.NOME,C.TEL,C.CPF_CNPJ,C.ENDERECO,C.TIPO_CAD FROM CONTA_REC AS R INNER JOIN PESSOA AS C '+
            'ON C.ID_CAD = ID_CAD_FK WHERE (R.DATA_PAG BETWEEN :dtincio AND :dtfim) AND R.STATUS =:status;');
            IBQueryCli.ParamByName('dtincio').AsDate := DateTimePicker1.Date;
            IBQueryCli.ParamByName('dtfim').AsDate := DateTimePicker2.Date;
            IBQueryCli.ParamByName('status').AsString := 'FECHADA';
            IBQueryCli.active:= true;
          end
    else if (Eid.Text <> '') then
      begin
        IBQueryCli.active := false;
        IBQueryCli.sql.clear;
        IBQueryCli.sql.add('SELECT R.ID_CONT_REC,R.DATA_LANC,R.DATA_ABERT,R.DATA_VENC,R.DATA_PAG,'+
            'R.VALOR_JUROS,R.VALOR_TOTAL,R.VALOR_PAGO,R.REF,R.STATUS,R.ID_CAD_FK,R.ID_OS_FK, '+
            'C.NOME,C.TEL,C.CPF_CNPJ,C.ENDERECO,C.TIPO_CAD FROM CONTA_REC AS R INNER JOIN PESSOA AS C '+
            'ON C.ID_CAD = ID_CAD_FK WHERE (R.DATA_PAG BETWEEN :dtincio AND :dtfim) AND R.STATUS =:status AND R.ID_CAD_FK =:idcad');
        IBQueryCli.ParamByName('dtincio').AsDate := DateTimePicker1.Date;
        IBQueryCli.ParamByName('dtfim').AsDate := DateTimePicker2.Date;
        IBQueryCli.ParamByName('status').AsString := 'FECHADA';
        IBQueryCli.ParamByName('idcad').Asinteger:= Strtoint(Eid.Text);
        IBQueryCli.active:= true;
      end;
  end;
   if (RadioGroup2.ItemIndex = 1) then
      begin
        if (Eid.Text = '') then
          begin
            IBQueryCli.active := false;
            IBQueryCli.sql.clear;
            IBQueryCli.sql.add('SELECT R.ID_CONT_REC,R.DATA_LANC,R.DATA_ABERT,R.DATA_VENC,R.DATA_PAG,'+
            'R.VALOR_JUROS,R.VALOR_TOTAL,R.VALOR_PAGO,R.REF,R.STATUS,R.ID_CAD_FK,R.ID_OS_FK, '+
            'C.NOME,C.TEL,C.CPF_CNPJ,C.ENDERECO,C.TIPO_CAD FROM CONTA_REC AS R INNER JOIN PESSOA AS C '+
            'ON C.ID_CAD = ID_CAD_FK WHERE (R.DATA_VENC BETWEEN :dtincio AND :dtfim) AND R.STATUS =:status;');
            IBQueryCli.ParamByName('dtincio').AsDate := DateTimePicker1.Date;
            IBQueryCli.ParamByName('dtfim').AsDate := DateTimePicker2.Date;
            IBQueryCli.ParamByName('status').AsString := 'FECHADA';
            IBQueryCli.active:= true;
      end
    else if (Eid.Text <> '') then
      begin
        IBQueryCli.active := false;
        IBQueryCli.sql.clear;
        IBQueryCli.sql.add('SELECT R.ID_CONT_REC,R.DATA_LANC,R.DATA_ABERT,R.DATA_VENC,R.DATA_PAG,'+
            'R.VALOR_JUROS,R.VALOR_TOTAL,R.VALOR_PAGO,R.REF,R.STATUS,R.ID_CAD_FK,R.ID_OS_FK, '+
            'C.NOME,C.TEL,C.CPF_CNPJ,C.ENDERECO,C.TIPO_CAD FROM CONTA_REC AS R INNER JOIN PESSOA AS C '+
            'ON C.ID_CAD = ID_CAD_FK WHERE (R.DATA_PAG BETWEEN :dtincio AND :dtfim) AND R.STATUS =:status AND R.ID_CAD_FK =:idcad');
        IBQueryCli.ParamByName('dtincio').AsDate := DateTimePicker1.Date;
        IBQueryCli.ParamByName('dtfim').AsDate := DateTimePicker2.Date;
        IBQueryCli.ParamByName('status').AsString := 'FECHADA';
        IBQueryCli.ParamByName('idcad').Asinteger:= Strtoint(Eid.Text);
        IBQueryCli.active:= true;
      end;
      end;
  end;

 end;

procedure TReceber.BitBtn2Click(Sender: TObject);
begin
close;
end;

procedure TReceber.BitBtn3Click(Sender: TObject);
begin
FrmPagamento.EValor.text:=Etotal.text;
FrmPagamento.DateTimePicker1.date:=date;
FrmPagamento.showmodal;
end;

procedure TReceber.BitBtn4Click(Sender: TObject);
begin
FrmNovoReceber.Eid.clear;
FrmNovoReceber.Ecliente.clear;
FrmNovoReceber.DateTimePicker1.Date:=Date;
FrmNovoReceber.DateTimePicker2.Date:=Date+30;
FrmNovoReceber.ShowModal;
end;

procedure TReceber.BitBtn6Click(Sender: TObject);
begin
if (RadioGroup1.ItemIndex = 0)  and (IBQueryCli.RecordCount > 0)then
begin
ppLabelDesc.Text:='Lista Contas a Receber '+DateTostr(DateTimePicker1.date)+' até '+DateTostr(DateTimePicker2.date);
ppReportlista2.Print;
end
else if (RadioGroup1.ItemIndex = 1) and (IBQueryCli.RecordCount > 0) then
begin
ppLabelDesc.Text:='Lista Contas Racebidas de '+DateTostr(DateTimePicker1.date)+' até '+DateTostr(DateTimePicker2.date);
ppReportlista1.Print;
end;
end;

procedure TReceber.BitBtn7Click(Sender: TObject);
begin
FrmBuscaPessoa.ShowModal;
end;

procedure TReceber.BitBtn8Click(Sender: TObject);
begin
if ((DbGrid1.Columns.Items[15].Field).AsString <> '') then
begin
Application.MessageBox('Não é possivel excluir Existe Referencia com Ordem de Serviço!','Erro',MB_ICONERROR);
end;
if ((DbGrid1.Columns.Items[15].Field).AsString = '') and (Application.MessageBox('Deseja realmente excuir?','Atenção Usuário',MB_YESNO+MB_ICONQUESTION)=6) then
begin
IBQueryCan.Close;
IBQueryCan.SQL.Text:='UPDATE CONTA_REC SET STATUS=:status WHERE ID_CONT_REC = :id';
IBQueryCan.ParamByName('id').AsInteger:=Strtoint((DbGrid1.Columns.Items[0].Field).AsString);
IBQueryCan.ParamByName('status').AsString:='CANCELADA';
IBQueryCan.ExecSQL;
IBQueryCli.Active:=false;
IBQueryCli.Active:=true;
end;
end;


procedure TReceber.DBGrid1CellClick(Column: TColumn);
var
  dias,Subtotal, taxa, juros,v1,v2,v3,carencia : real;
  dataFim, DataIni: TDateTime;
begin

if (IBQueryCli.RecordCount > 0) and (RadioGroup1.ItemIndex = 0) then
  begin
  carencia:= StrToFloat(Form1.IBQueryConfg_CPF.fieldByname('CARENCIA').AsString);
  DataIni:=StrToDate((DbGrid1.Columns.Items[6].Field).AsString);
  dataFim:=date;
  dias := (Trunc(DataFim - DataIni ));
  Ejuros.Text:='0,00';
if (DataFim > DataIni+carencia) then
 begin
  Subtotal:= StrToFloat((DbGrid1.Columns.Items[3].Field).AsString);
  taxa := StrToFloat(Form1.IBQueryConfg_CPF.fieldByname('JUROS').AsString);
  taxa:= taxa/30;
  juros := (Subtotal * (taxa * dias)) / 100 ;
  EsubTotal.Text:=(DbGrid1.Columns.Items[3].Field).AsString;
  Edias.Text:=(FloatToStr(dias));
  Ejuros.Text:= FormatFloat('#######0.00',(juros));
  Etotal.Text:= FormatFloat('#######0.00',(juros + subtotal));
  end
  Else if (DataFim <= DataIni+carencia) then
  begin
  EsubTotal.Text:=(DbGrid1.Columns.Items[3].Field).AsString;
  Edias.Text:=(FloatToStr(dias));
  v1:=StrtoFloat(EsubTotal.Text);
  v2:=StrtoFloat(Ejuros.Text);
  v3:=StrtoFloat(EDesc.Text);
  Etotal.Text:=FormatFloat('#######0.00',(v1+v2)-v3);
  end;


  end;


  end;




procedure TReceber.DBGrid1DrawColumnCell(Sender: TObject; const Rect: TRect;
  DataCol: Integer; Column: TColumn; State: TGridDrawState);
begin
if (RadioGroup1.ItemIndex = 0 ) then
begin
DBGrid1.Canvas.Font.Color := clBlack;
   if (IBQueryCli.FieldByName('DATA_VENC').Value < date) then
   begin
      DBGrid1.Canvas.Font.Color := clRed;
   end;
   DBGrid1.DefaultDrawColumnCell( Rect, DataCol, Column, State);
end;
end;

procedure TReceber.EbuscaKeyPress(Sender: TObject; var Key: Char);
begin
  If key = #13 then
   Begin
    Key:= #0;
    BitBtn1.SetFocus;
end;
End;


procedure TReceber.EdescExit(Sender: TObject);
var v1,v2,v3:real;
begin
if (Edesc.Text = '') then
begin
Edesc.Text := '0,00';
end;
if (Edesc.text <> '') then
begin
v1:=StrtoFloat(EsubTotal.Text);
v2:=StrtoFloat(Ejuros.Text);
v3:=StrtoFloat(EDesc.Text);
Etotal.Text:=FormatFloat('#######0.00',(v1+v2)-v3);
Edesc.text:= FormatFloat('#######0.00',StrToFloat(Edesc.Text));
end;
end;

procedure TReceber.EdescKeyPress(Sender: TObject; var Key: Char);
begin
if not (key in ['0'..'9',',',#8,#13]) then key :=#0;   // permitir apenas digitar numeros no campo valor do item_O.S
  If key = #13 then
   Begin
    Key:= #0;
   BitBtn3.SetFocus;
end;
end;

procedure TReceber.EjurosExit(Sender: TObject);
var v1,v2,v3:real;
begin
if (Ejuros.Text = '') then
begin
Ejuros.Text := '0,00';
end;
if (Ejuros.text <> '') then
begin
v1:=StrtoFloat(EsubTotal.Text);
v2:=StrtoFloat(Ejuros.Text);
v3:=StrtoFloat(EDesc.Text);
Etotal.Text:=FormatFloat('#######0.00',(v1+v2)-v3);
Ejuros.text:= FormatFloat('#######0.00',StrToFloat(Ejuros.Text));
end;
end;
procedure TReceber.EjurosKeyPress(Sender: TObject; var Key: Char);
begin
if not (key in ['0'..'9',',',#8,#13]) then key :=#0;
  If key = #13 then
   Begin
    Key:= #0;
    Edesc.SetFocus;
end;
end;

procedure TReceber.FormClose(Sender: TObject; var Action: TCloseAction);
begin
IBQueryCli.active:= FALSE;
end;

procedure TReceber.RadioGroup1Click(Sender: TObject);
begin
if (RadioGroup1.ItemIndex = 0) then
begin
DateTimePicker1.Date:=date-20;
DateTimePicker2.Date:=date+30;
RadioGroup2.Items.Clear;
RadioGroup2.Items.Add('Data de lançamento');
RadioGroup2.Items.Add('Data de Vencimento');
RadioGroup2.ItemIndex:=0;
end
else if (RadioGroup1.ItemIndex = 1) then
begin
RadioGroup2.Items.Clear;
DateTimePicker1.Date:=date;
DateTimePicker2.Date:=date;
RadioGroup2.Items.Add('Data de Pagamento');
RadioGroup2.Items.Add('Data de Vencimento');
RadioGroup2.ItemIndex:=0;
end;
end;

end.
