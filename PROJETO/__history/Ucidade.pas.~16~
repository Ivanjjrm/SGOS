unit Ucidade;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, Vcl.Buttons, Vcl.ExtCtrls,
  Vcl.Grids, Vcl.DBGrids, Data.DB, IBX.IBCustomDataSet, IBX.IBQuery;

type
  TCidade = class(TForm)
    Ecidade: TEdit;
    Euf: TEdit;
    Ebusca: TEdit;
    DBGrid1: TDBGrid;
    Label1: TLabel;
    Label2: TLabel;
    Label3: TLabel;
    Panel1: TPanel;
    BitBtn1: TBitBtn;
    BitBtn2: TBitBtn;
    BitBtn3: TBitBtn;
    BitBtn4: TBitBtn;
    Eid: TEdit;
    IBQueryCad: TIBQuery;
    IBQuerygrid: TIBQuery;
    DataSourcegrid: TDataSource;
    IBQuerygridID_CID: TIntegerField;
    IBQuerygridNOME_CID: TIBStringField;
    IBQuerygridUF: TIBStringField;
    procedure BitBtn4Click(Sender: TObject);
    procedure BitBtn1Click(Sender: TObject);
    procedure EbuscaKeyPress(Sender: TObject; var Key: Char);
    procedure DBGrid1DblClick(Sender: TObject);
    procedure BitBtn2Click(Sender: TObject);
    procedure BitBtn3Click(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Cidade: TCidade;

implementation

{$R *.dfm}

uses Uprincipal;

procedure TCidade.BitBtn1Click(Sender: TObject);
Var
contuf : integer;
begin
 contuf:=Length(Euf.Text);
 Ecidade.Text:=Trim(Ecidade.Text);
  if (Ecidade.Text = '') then
    begin
     Showmessage('Campo Cidade está vazio!');
     Ecidade.SetFocus;
     Break;
    end;

  if (contuf < 2) then
    begin
    Showmessage('Campo Estado está Invalido');
    Euf.SetFocus;
    Break;
    end;

  if (Eid.Text = '') and (Ecidade.Text <> '') and (Euf.Text <> '') then
  begin
   IBQueryCad.Close;
   IBQueryCAd.SQL.Text:='INSERT INTO CIDADE (ID_CID,NOME_CID,UF) VALUES (:id,:cidade,:uf)';
   IBQuerycad.ParamByName('id').Asinteger:=0;
   IBQuerycad.ParamByName('cidade').AsString:=Ecidade.Text;
   IBQuerycad.ParamByName('uf').AsString:=Euf.Text;
   IBQuerycad.ExecSQL;
   Eid.Clear;Ecidade.Clear;Euf.Clear;
  end;

  if(Eid.Text <> '') and (Ecidade.Text <> '') and (Euf.Text <> '') then
    begin
     IBQueryCad.Close;
     IBQueryCad.SQL.Text:='UPDATE CIDADE SET NOME_CID=:cidade, UF=:uf WHERE ID_CID = :id';
     IBQuerycad.ParamByName('id').Asinteger:=Strtoint(Eid.Text);
     IBQuerycad.ParamByName('cidade').AsString:=Ecidade.Text;
     IBQuerycad.ParamByName('uf').AsString:=Euf.Text;
     IBQuerycad.ExecSQL;
     Eid.Clear;Ecidade.Clear;Euf.Clear;
    end;





end;


procedure TCidade.BitBtn2Click(Sender: TObject);
begin
Eid.Clear;Ecidade.Clear;Euf.Clear;
end;

procedure TCidade.BitBtn3Click(Sender: TObject);
begin
try
  begin
    if (Eid.Text <> '') then
    if (Application.MessageBox('Deseja Realmente Excluir essa Cidade?','Atenção Usuário',MB_YESNO+MB_ICONQUESTION)=6) then
      begin
        IBQuerycad.Close;
        IBQuerycad.sql.Text:=('DELETE FROM CIDADE WHERE ID_CID = :id');
        IBQuerycad.ParamByName('id').AsString := Eid.Text;
        IBQuerycad.ExecSQL;
        IBQuerygrid.active:= FALSE;
        IBQuerygrid.active:= true;
        Eid.Clear;Ecidade.Clear;Euf.Clear;Ebusca.Clear;IBQueryGrid.close; Ebusca.setfocus;
        end;
    end;
      except
       on e: Exception do
      begin
        Application.MessageBox('Não é possivel Excluir! Existem referências desta Cidade no sistema!','Atenção Usuário',MB_ICONERROR);
      end;
  end;
end;
procedure TCidade.BitBtn4Click(Sender: TObject);
begin
close;
end;

procedure TCidade.DBGrid1DblClick(Sender: TObject);
begin
  if (IBQuerygrid.RecordCount > 0) then
    begin
    Eid.Text:=(DbGrid1.Columns.Items[0].Field).AsString;
    Ecidade.Text:=(DbGrid1.Columns.Items[1].Field).AsString;
    Euf.Text:=(DbGrid1.Columns.Items[1].Field).AsString;
    Ebusca.Clear;
    end;
end;

procedure TCidade.EbuscaKeyPress(Sender: TObject; var Key: Char);
begin
IBQuerygrid.active := false;
IBQuerygrid.sql.clear;
IBQuerygrid.sql.add('SELECT * FROM CIDADE WHERE LIKE :cidade');
IBQuerygrid.ParamByName('cidade').AsString := Ebusca.Text + '%';
IBQuerygrid.active:= true;
end;

end.
